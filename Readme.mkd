# 📄 EU Law Documents Web Scraping Project

## 🌟 Overview

This project scrapes data on EU law documents from the [EUR-Lex website](https://eur-lex.europa.eu/statistics/eu-law-statistics.html). It retrieves the number of law documents for the entire EU, broken down by country and document type, and generates a comprehensive **panel dataset** with monthly frequency and country-level granularity.


---

## 📂 Project Structure

### 🗂 **HTML Files Storage**
- **Folder:** `html_files/`
- **📌 Purpose:** Stores the raw HTML files downloaded from the **EUR-Lex** website for each year and month.
- **📁 Contents:**
  - Files are named as `eu_law_statistics_YYYY_MM.html`, where:
    - `YYYY` = Year (e.g., 2003)
    - `MM` = Month (e.g., 01 for January)

---

### 🖥️ **Main Script**
- **File:** [law_web_scraping.py](./law_web_scraping.py)
- **📌 Purpose:**
  - Downloads, processes, and extracts data from the HTML files.
  - Combines country-level and sector-level statistics.
  - Outputs a **panel dataset** for further analysis.

---

### 📊 **Dataset**
- **File:** [eu_law_statistics_panel.csv](./eu_law_statistics_panel.csv)
- **📌 Purpose:** The final panel dataset generated by the script.
- **🔗 Example Data Structure:**
  | Year | Month | Country | Type                      | Type_value | Format | Format_value |
  | ---- | ----- | ------- | ------------------------- | ---------- | ------ | ------------ |
  | 2003 | 1     | BUL     | Consolidated documents    | 181        | PDF    | 86           |
  | 2003 | 1     | BUL     | Treaties                  | 0          | PDF    | 86           |
  | 2003 | 1     | BUL     | International agreements  | 32         | PDF    | 86           |
  | 2003 | 1     | BUL     | Legislation               | 374        | PDF    | 86           |
  | 2003 | 1     | BUL     | Complementary legislation | 2          | PDF    | 86           |

---

## ⚙️ How It Works

1. **🔍 Scraping HTML Files**:
   - The script iterates through all months from **2003** to **2025**.
   - Downloads HTML files from the [EUR-Lex website](https://eur-lex.europa.eu/statistics/eu-law-statistics.html/statistics/).

2. **📂 Processing HTML Files**:
   - Extracts:
     - **Country-specific data**: Document counts for each country.
     - **Sector-level data**: Aggregated statistics by document types like treaties, legislation, etc.

3. **🔗 Combining Data**:
   - Merges the country and sector data into a single dataset with monthly frequency.

4. **📤 Output**:
   - Saves the final dataset as a CSV file: [eu_law_statistics_panel.csv](./eu_law_statistics_panel.csv).

---

## 🚀 How to Run

1. **💻 Set Up the Environment**:
   - Install required Python libraries:
     ```bash
     pip install requests beautifulsoup4 pandas numpy
     ```

2. **▶️ Run the Script**:
   - Execute the main script:
     ```bash
     python law_web_scraping.py
     ```

3. **📒 Run the Notebook**:
   - Open and run the Jupyter Notebook:
     ```bash
     jupyter notebook law_web_scraping.ipynb
     ```

4. **📊 Output**:
   - The dataset will be saved as `eu_law_statistics_panel.csv` in the project directory.

---

## 🔮 Future Enhancements

- **📈 Real-Time Updates**:
  - Automate scraping for new data as it becomes available.
- **🛠️ Robust Error Handling**:
  - Improve handling of incomplete or missing data for specific months.
- **🧠 Insights**:
  - Extend the dataset to include additional metadata, such as document categories or cross-country comparisons.

---

Feel free to explore the **[EUR-Lex website](https://eur-lex.europa.eu/statistics/eu-law-statistics.html/statistics/)** or check out the dataset directly: [eu_law_statistics_panel.csv](./eu_law_statistics_panel.csv). 😊 Let me know if you have any feedback!
